apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: demo-service-mesh
  name: 'service-a-v2'
  annotations: {}
  labels:
    app: service-a

    app.kubernetes.io/component: service-a
    app.kubernetes.io/instance: service-a
    app.kubernetes.io/name: service-a
    app.kubernetes.io/part-of: service-a
    app.openshift.io/runtime-namespace: demo-service-mesh
spec:
  selector:
    matchLabels:
      app: service-a
  replicas: 2
  template:
    metadata:
      labels:
        app: service-a
        version: v2
        app.kubernetes.io/component: service-a
        app.kubernetes.io/name: service-a
        deployment: service-a
      annotations:
        sidecar.istio.io/inject: "true"

        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/service-a-v2/q/metrics"
    spec:
      containers:
        - name: container
          image: >-
            quay.io/appdev_playground/service-mesh-basic-example:service-a-v2-0.0.19
          ports:
            - containerPort: 8080
              protocol: TCP
      imagePullSecrets: []
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  paused: false
